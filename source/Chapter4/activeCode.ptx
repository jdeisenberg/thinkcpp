<section xml:id="chapter4_activecode-exercises">
        <title>Activecode Exercises</title>
        <p>Answer the following <term>Activecode</term> questions to
            assess what you have learned in this chapter.</p>
        <exercise xml:id="ch4_ex1"><statement>
                <p>Fix the code below so that it prints &#8220;THE TEAM&#8221; &#8220;THE TEAM&#8221;
                    &#8220;THE TEAM&#8221; on three separate lines.</p>

    </statement><program interactive="activecode" language="cpp" xml:id="cond_rec_a1q_editor">

        <input>
#include &lt;iostream&gt;
using namespace std;

int main() {
   int x = 8;
   int y = 8;

   if (x % 2 == 0) {
       cout &lt;&lt; "THE TEAM";
   }
   else if (x &gt;= y) {
       cout &lt;&lt; "THE TEAM";
   }
   else if (y &gt;= x) {
       cout &lt;&lt; "THE TEAM";
   }
}
        </input>
<tests>


</tests>

    </program><solution>

                <p>Below is one way to fix the program.  Since we want &#8220;THE TEAM&#8221;
                    to print three times, we must check all three conditons.  this
                    means changing the <c>else if</c> statements to <c>if</c> statements.</p>

    
    <program xml:id="cond_rec_a1_a_editor" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;
int main(){
   int x = 8;
   int y = 8;

   if (x % 2 == 0) {
       cout &lt;&lt; "THE TEAM" &lt;&lt; endl;
   }
   if (x &gt;= y) {
       cout &lt;&lt; "THE TEAM" &lt;&lt; endl;
   }
   if (y &gt;= x) {
       cout &lt;&lt;&lt; "THE TEAM" &lt;&lt; endl;
   }
}
        </input>

    </program>

            </solution></exercise>


        <exercise xml:id="ch4_ex2"><statement>
                <p>Fix the infinite recursion in the code below.  The function
                    should not count any numbers after 10 (the highest numbers
                    that should print are 9 or 10).  When it is done counting,
                    the function should print that.</p>

    </statement><program interactive="activecode" language="cpp" xml:id="cond_rec_a3q_editor">

        <input>
#include &lt;iostream&gt;
using namespace std;

void countBy2 (int num) {
    if (num != 10) {
        cout &lt;&lt; num;
        countBy2 (num + 2);
    }
    else {
        cout &lt;&lt; num &lt;&lt; endl;
        cout &lt;&lt; "Done counting!";
    }
}

int main () {
    countBy2(6);
}
        </input>

    </program><solution>


    
                <p>Below is one way to fix the program.  The infinite recursion
                    happens when we use an odd number as an argument.  By checking
                    that a number is less than 99, the highest numbers to recurse
                    are 98 and 97.  98 + 2 == 100 and 97 + 2 == 99, so we
                    never count past 100.</p>

    
    <program xml:id="cond_rec_a3_a_editor" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

void countBy2 (int num) {
    if (num &lt; 9) {
        cout &lt;&lt; num;
        countBy2 (num + 2);
    }
    else {
        cout &lt;&lt; num &lt;&lt; endl;
        cout &lt;&lt; "Done counting!";
    }
}

int main () {
    countBy2(6);
}
        </input>

    </program>

</solution></exercise>

        <exercise xml:id="ch4_ex3"><statement>
                <p>Finish the code below so that the function will continue to
                    ask for input until the user guesses the word correctly.</p>

    </statement><program interactive="activecode" language="cpp" xml:id="cond_rec_a5q_editor">

        <input>
#include &lt;iostream&gt;
using namespace std;

bool guessTheWord (string correct) {
    cout &lt;&lt; "Guess the word!";
    string guess;
    cin &gt;&gt; guess;
    if (guess == correct) {
        cout &lt;&lt; "That's it!";
    }
}
        </input>
    </program><solution>


    
                <p>Below is one way to complete the program.</p>

    
    <program xml:id="cond_rec_a5a_editor" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

bool guessTheWord (string correct) {
    cout &lt;&lt; "Guess the word!";
    string guess;
    cin &gt;&gt; guess;
    if (guess == correct) {
        cout &lt;&lt; "That's it!";
    }
    else {
        guessTheWord(correct);
    }
}
        </input>

    </program>


            </solution></exercise>


        <exercise xml:id="ch4_ex4"><statement>
                <p>Write the function <c>goodVibes</c> that prints &#8220;I&#8217;m having a <c>mood</c> day!&#8221;
                    depending on the value of <c>mood</c>.  If <c>mood</c> is &#8220;bad&#8221;, then the function
                    should not do anything since it&#8217;s good vibes only.  Be sure to
                    include any necessary headers.</p>

    </statement><program interactive="activecode" language="cpp" xml:id="cond_rec_a7q_editor">

        <input>
#include &lt;iostream&gt;
using namespace std;

void goodVibes (string mood) {

}
        </input>
<tests>


</tests>

    </program><solution>
    <p>Below is one way to write the program.  The <c>return</c> allows the
                    function to exit if there are bad vibes in the room.  Otherise,
                    the function prints as directed.</p>

    
    <program xml:id="cond_rec_a7a_editor" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

void goodVibes (string mood) {
    if (mood == "bad") {
        return;
    }
    cout &lt;&lt; "I'm having a " &lt;&lt; mood &lt;&lt; " day";
}
        </input>

    </program>

            </solution></exercise>

        <exercise xml:id="ch4_ex5"><statement>
                <p>Write the function <c>countdown</c> that takes a positive integer
                    and decrements it until eaching zero, printing the number at each
                    step of the way.  Once it reaches zero, it should print &#8220;Blastoff!&#8221;</p>

    </statement><program interactive="activecode" language="cpp" xml:id="cond_rec_a9q_editor">

        <input>
#include &lt;iostream&gt;
using namespace std;

void countdown (int num) {

}
        </input>
<tests>


</tests>

    </program><solution>


    
                <p>Below is one way to write the program.</p>

    
    <program xml:id="cond_rec_a9a_editor" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

void countdown (int num) {
    if (num != 0){
        cout &lt;&lt; num &lt;&lt; endl;
        num -= 1;
        countdown (num);
    }
    else {
        cout &lt;&lt; "Blastoff!";
    }
}
        </input>

    </program>

            

            </solution></exercise>
    </section>

