<section xml:id="chapter15_coding-practice">
        <title>Coding Practice</title>
        <exercise xml:id=""><TabNode tabname="Activecode" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">

<exercise label="cp_15_AC_2q">
    <statement>
                <p>Write a program that prompts a user for the name of an input file
                    and for an integer <c>n</c>. Then open the file and output the first
                    <c>n</c> lines of the file with each line reversed. For example,
                    if you read in the line &#8220;hello world&#8221; you should print out
                    &#8220;dlrow olleh&#8221; to the terminal. Include proper file error checking.
                    Select the Parsonsprob tab for hints for the construction of the code.</p>

    </statement>
    <program xml:id="cp_15_AC_2q_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;fstream&gt;
using namespace std;

// Write your code here.
        </input>
<tests>


</tests>

    </program>
</exercise>
            </TabNode><TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
<exercise label="cp_15_AC_2q_pp" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
                <p>Write a program that prompts a user for the name of an input file
                    and for an integer <c>n</c>. Then open the file and output the first
                    <c>n</c> lines of the file with each line reversed. For example,
                    if you read in the line &#8220;hello world&#8221; you should print out
                    &#8220;dlrow olleh&#8221; to the terminal. Include proper file error checking.
                    Use the lines to construct the code, then go back to complete the Activecode tab.</p>
</statement>
<blocks><block order="13">
<cline>int main () {</cline>
</block><block order="6">
<cline>   string fileIn;</cline>
</block><block order="12">
<cline>   int n;</cline>
</block><block order="9">
<cline>   string line;</cline>
</block><block order="8">
<cline>   cout &lt;&lt; "Enter the name of the file: ";</cline>
<cline>   cin &gt;&gt; fileIn;</cline>
<cline>   cout &lt;&lt; fileIn &lt;&lt; endl;</cline>
</block><block order="11">
<cline>   cout &lt;&lt; "Enter an integer: ";</cline>
<cline>   cin &gt;&gt; n;</cline>
<cline>   cout &lt;&lt; n &lt;&lt; endl;</cline>
</block><block order="3">
<cline>   ifstream inFile(fileIn.c_str());</cline>
</block><block order="1">
<cline>   if (inFile.good() == false) {</cline>
<cline>      cout &lt;&lt; "Unable to open the file named " &lt;&lt; fileIn &lt;&lt; " and output " &lt;&lt; n &lt;&lt; " lines." &lt;&lt; endl;</cline>
<cline>      exit(1);</cline>
<cline>   }</cline>
</block><block order="5">
<cline>   for (int i = 0; i &lt; n; i++) {</cline>
</block><block order="10">
<cline>      getline(inFile, line);</cline>
</block><block order="4">
<cline>      cout &lt;&lt; line &lt;&lt; endl;</cline>
</block><block order="2">
<cline>   }</cline>
</block><block order="7">
<cline>}</cline>
</block></blocks></exercise>            </TabNode><TabNode tabname="Input File" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Input File'}">
                <p>Below are the contents of the input file.</p>
                <pre>We choose to go to the Moon. We choose to go to the Moon...
We choose to go to the Moon in this decade and do the other things,
not because they are easy, but because they are hard; because that goal
will serve to organize and measure the best of our energies and skills,
because that challenge is one that we are willing to accept, one we are
unwilling to postpone, and one we intend to win, and the others, too.</pre>
            </TabNode></exercise>
        <exercise xml:id=""><TabNode tabname="Activecode" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">

<exercise label="cp_15_AC_4q">
    <statement>
                <p>Write a program that prompts a user for an integer <c>n</c> and print the first <c>n</c>
                    powers of 2 to an output file called <c>powers.txt</c>. Include proper file error checking.
                    To simulate what your output file would look like, the contents of your output file
                    will be displayed on the terminal. Select the Parsonsprob tab for hints for the construction of the code.</p>

    </statement>
    <program xml:id="cp_15_AC_4q_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;fstream&gt;
#include &lt;cmath&gt;
using namespace std;

int main() {
   // Write your code here.





   // Do not modify the code below
   ifstream student_output("powers.txt");
   if (!student_output.good()) {
         cout &lt;&lt; "Error opening student's output." &lt;&lt; endl;
   }
   string answer;
   while (getline(student_output, answer)) {
         cout &lt;&lt; answer &lt;&lt; endl;
   }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </TabNode><TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
<exercise label="cp_15_AC_4q_pp" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
                <p>Write a program that prompts a user for an integer <c>n</c> and print the first <c>n</c>
                    powers of 2 to an output file called <c>powers.txt</c>. Include proper file error checking.
                    To simulate what your output file would look like, the contents of your output file
                    will be displayed on the terminal. Use the lines to construct the code, then go back
                    to complete the Activecode tab.</p>
</statement>
<blocks><block order="3">
<cline>int main() {</cline>
</block><block order="7">
<cline>   int n;</cline>
</block><block order="14">
<cline>   cout &lt;&lt; "Enter an integer: ";</cline>
</block><block order="9">
<cline>   cin &gt;&gt; n;</cline>
</block><block order="6">
<cline>   cout &lt;&lt; n &lt;&lt; endl;</cline>
</block><block order="4">
<cline>   ofstream outfile ("powers.txt");</cline>
</block><block order="12">
<cline>   if (outfile.good() == false) {</cline>
<cline>      cout &lt;&lt; "Unable to open output file." &lt;&lt; endl;</cline>
<cline>      exit (1);</cline>
<cline>   }</cline>
</block><block order="5">
<cline>   while (true) {</cline>
</block><block order="10">
<cline>      for (int i = 0; i &lt; n; i++) {</cline>
</block><block order="15">
<cline>            outfile &lt;&lt; pow(2,i) &lt;&lt; endl;</cline>
</block><block order="8">
<cline>      }</cline>
</block><block order="11">
<cline>   }</cline>
</block><block order="17">
<cline>   ifstream student_output("powers.txt");</cline>
</block><block order="13">
<cline>   if (!student_output.good()) {</cline>
<cline>      cout &lt;&lt; "Error opening student's output." &lt;&lt; endl;</cline>
<cline>   }</cline>
</block><block order="2">
<cline>   string answer;</cline>
</block><block order="1">
<cline>   while (getline(student_output, answer)) {</cline>
<cline>      cout &lt;&lt; answer &lt;&lt; endl;</cline>
<cline>   }</cline>
</block><block order="16">
<cline>}</cline>
</block></blocks></exercise>            </TabNode></exercise>
        <exercise xml:id=""><TabNode tabname="Activecode" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">

<exercise label="cp_15_AC_6q">
    <statement>
                <p>Write a program that takes an input file called &#8220;dream.txt&#8221; and outputs
                    the number of times the string &#8220;you&#8221; appears in the file to the terminal.
                    Include proper file error checking.
                    Select the Parsonsprob tab for hints for the construction of the code.</p>

    </statement>
    <program xml:id="cp_15_AC_6q_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;fstream&gt;
using namespace std;

// Write your code here.
        </input>
<tests>


</tests>

    </program>
</exercise>
            </TabNode><TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
<exercise label="cp_15_AC_6q_pp" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
                <p>Write a program that takes an input file called &#8220;dream.txt&#8221; and outputs
                    the number of times the string &#8220;you&#8221; appears in the file to the terminal.
                    Include proper file error checking. Use the lines to construct the code,
                    then go back to complete the Activecode tab.</p>
</statement>
<blocks><block order="2">
<cline>int main() {</cline>
</block><block order="10">
<cline>   int count = 0;</cline>
</block><block order="3">
<cline>   char w[ ] = {'y', 'o', 'u'};</cline>
</block><block order="1">
<cline>   ifstream inFile("dream.txt");</cline>
</block><block order="8">
<cline>   string line;</cline>
</block><block order="15">
<cline>   if (!inFile.good()) {</cline>
<cline>      cout &lt;&lt; "Unable to open file." &lt;&lt; endl;</cline>
<cline>      exit(1);</cline>
<cline>   }</cline>
</block><block order="12">
<cline>   while (getline(inFile,line)) {</cline>
</block><block order="14">
<cline>      for (int unsigned i = 0; i &lt; line.size(); i++) {</cline>
</block><block order="16">
<cline>            if (line.at(i) == w[0]) {</cline>
</block><block order="7">
<cline>               if (line.at(i+1) == w[1]) {</cline>
</block><block order="13">
<cline>                  if (line.at (i+2) == w[2]) {</cline>
</block><block order="9">
<cline>                        count++;</cline>
</block><block order="4">
<cline>                  }</cline>
</block><block order="11">
<cline>               }</cline>
</block><block order="6">
<cline>            }</cline>
</block><block order="5">
<cline>      }</cline>
</block><block order="18">
<cline>   }</cline>
</block><block order="17">
<cline>   cout &lt;&lt; count &lt;&lt; endl;</cline>
</block><block order="19">
<cline>}</cline>
</block></blocks></exercise>            </TabNode><TabNode tabname="Input File" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Input File'}">
                <p>Below are the contents of the input file.</p>
                <pre>Have you ever had a dream that you,
um, you had, your, you- you could,
you&#8217;ll do, you- you wants, you, you
could do so, you- you&#8217;ll do, you could-
you, you want, you want them to do you
so much you could do anything?</pre>
            </TabNode></exercise>
        <exercise xml:id=""><TabNode tabname="Activecode" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">

<exercise label="cp_15_AC_8q">
    <statement>
                <p>Write a program that takes an input file called &#8220;shrimp.txt&#8221; and outputs
                    the quote with &#8220;shrimp&#8221; replaced by a word that the user inputs to the terminal.
                    Include proper file error checking.
                    Select the Parsonsprob tab for hints for the construction of the code.</p>

    </statement>
    <program xml:id="cp_15_AC_8q_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;fstream&gt;
using namespace std;

// Write your code here.
        </input>
<tests>


</tests>

    </program>
</exercise>
            </TabNode><TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
<exercise label="cp_15_AC_8q_pp" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
                <p>Write a program that takes an input file called &#8220;shrimp.txt&#8221; and outputs
                    the quote with &#8220;shrimp&#8221; replaced by a word that the user inputs to the terminal.
                    Include proper file error checking.
                    Use the lines to construct the code, then go back to complete the Activecode tab.</p>
</statement>
<blocks><block order="5">
<cline>int main() {</cline>
</block><block order="14">
<cline>   string word;</cline>
</block><block order="7">
<cline>   cout &lt;&lt; "Enter word to replace 'shrimp': ";</cline>
</block><block order="15">
<cline>   cin &gt;&gt; word;</cline>
</block><block order="10">
<cline>   cout &lt;&lt; word &lt;&lt; endl;</cline>
</block><block order="2">
<cline>   string replace = "shrimp";</cline>
</block><block order="17">
<cline>   ifstream inFile("shrimp.txt");</cline>
</block><block order="9">
<cline>   string line;</cline>
</block><block order="13">
<cline>   for (int i = 0; i &lt; 4; i++) {</cline>
</block><block order="1">
<cline>      getline(inFile,line);</cline>
</block><block order="3">
<cline>      for (int unsigned j = 0; j &lt; line.size(); j++) {</cline>
</block><block order="4">
<cline>         size_t pos = line.find(replace);</cline>
</block><block order="8">
<cline>         if (pos != std::string::npos) {</cline>
</block><block order="18">
<cline>            line.replace(pos,replace.length(),word);</cline>
</block><block order="6">
<cline>         }</cline>
</block><block order="12">
<cline>      }</cline>
</block><block order="19">
<cline>      cout &lt;&lt; line &lt;&lt; endl;</cline>
</block><block order="11">
<cline>   }</cline>
</block><block order="16">
<cline>}</cline>
</block></blocks></exercise>            </TabNode><TabNode tabname="Input File" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Input File'}">
                <p>Below are the contents of the input file.</p>
                <pre>There's pineapple shrimp, lemon shrimp, coconut shrimp,
pepper shrimp, shrimp soup, shrimp stew, shrimp salad,
shrimp and potatoes, shrimp burger, shrimp sandwich.
That- that's about it.</pre>
            </TabNode></exercise>
        <exercise xml:id=""><TabNode tabname="Activecode" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">

<exercise label="cp_15_AC_10q">
    <statement>
                <p>Write a program that computes the product of two matrices.
                    Take a look at the example below. Two find the product of two
                    matrices, take the ith row from the first matrix and the jth column
                    from the second matrix, find the summation of the product of each component,
                    and that&#8217;s the value that goes into the (i, j) location of the new matrix.
                    The product of an mxn and an nxp matrix is an mxp matrix.
                    Select the Parsonsprob tab for hints for the construction of the code.</p>

    </statement>
    <program xml:id="cp_15_AC_10q_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;fstream&gt;
using namespace std;

int main() {
   /*
      2x3 matrix A  X 3x2 matrix B                2x2 matrix C
   [ a    b    c ]    [ g    h ]       [ ag + bi + cl    ah + bj + cm ]
   [ d    e    f ]    [ i    j ]   =   [ dg + ei + fl    dh + ej + fm ]
                        [ l    m ]
   */

   // Write your code here.
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </TabNode><TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'coding_practice_sq', 'chapter': 'Chapter15', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
<exercise label="cp_15_AC_10q_pp" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
                <p>Write a program that computes the product of two matrices.
                    Take a look at the example below. To find the product of two
                    matrices, take the ith row from the first matrix and the jth column
                    from the second matrix, find the summation of the product of each component,
                    and that&#8217;s the value that goes into the (i, j) location of the new matrix.
                    The product of an mxn and an nxp matrix is an mxp matrix.
                    Use the lines to construct the code, then go back to complete the Activecode tab.</p>
</statement>
<blocks><block order="7">
<cline>int main() {</cline>
</block><block order="2">
<cline>matrix&lt;int&gt; A(2,3);</cline>
</block><block order="5">
<cline>matrix&lt;int&gt; B(3,2);</cline>
</block><block order="3">
<cline>matrix&lt;int&gt; C(2,2);</cline>
</block><block order="9">
<cline>C[0,0] = (A[0,0] * B[0,0]) + (A[0,1] * B[1,0]) + (A[0,2] * B[2,0]);</cline>
</block><block order="8">
<cline>C[0,1] = (A[0,0] * B[0,1]) + (A[0,1] * B[1,1]) + (A[0,2] * B[2,1]);</cline>
</block><block order="6">
<cline>C[1,0] = (A[1,0] * B[0,0]) + (A[1,1] * B[1,0]) + (A[1,2] * B[2,0]);</cline>
</block><block order="4">
<cline>C[1,1] = (A[1,0] * B[0,1]) + (A[1,1] * B[1,1]) + (A[1,2] * B[2,1]);</cline>
</block><block order="1">
<cline>}</cline>
</block></blocks></exercise>            </TabNode></exercise>
    </section>

