<section xml:id="chapter7_extracting-characters-from-a-string">
        <title>Extracting characters from a string</title>
        
        
        <p xml:id="chapter7_index-0">Strings are called &#8220;strings&#8221; because they are made up of a sequence, or
            string, of characters. The first operation we are going to perform on a
            string is to extract one of the characters. C++ uses square brackets
            (<c>[</c> and <c>]</c>) for this operation.</p>

<exercise label="extracting_characters_AC_1">
    <statement>
        <p>Take a look at the active code below. We extract the character
            at index 1 from string <c>fruit</c> using <c>[</c> and <c>]</c>.</p>

    </statement>
    <program xml:id="extracting_characters_AC_1_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

int main() {
    string fruit = "banana";
    char letter = fruit[1];
    cout &lt;&lt; letter &lt;&lt; endl;
}
        </input>
<tests>


</tests>

    </program>
</exercise>
        <p>The expression <c>fruit[1]</c> indicates that I want character number 1
            from the string named <c>fruit</c>. The result is stored in a <c>char</c>
            named <c>letter</c>. When I output the value of <c>letter</c>, I get a
            surprise:</p>
        <pre>a</pre>
        <p><c>a</c> is not the first letter of <c>"banana"</c>. Unless you are a computer
            scientist. For perverse reasons, computer scientists always start
            counting from zero. The 0th letter (&#8220;zeroeth&#8221;) of <c>"banana"</c> is <c>b</c>.
            The 1th letter (&#8220;oneth&#8221;) is <c>a</c> and the 2th (&#8220;twoeth&#8221;) letter is
            <c>n</c>.</p>
        <note>
            <p>In C++, indexing begins at 0!</p>
        </note>
        <p>If you want the the zereoth letter of a string, you have to put zero in
            the square brackets.</p>

<exercise label="extracting_characters_AC_2">
    <statement>
        <p>The active code below accesses the first character in string <c>fruit</c>.</p>

    </statement>
    <program xml:id="extracting_characters_AC_2_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

int main() {
    string fruit = "banana";
    char letter = fruit[0];
    cout &lt;&lt; letter &lt;&lt; endl;
}
        </input>
<tests>


</tests>

    </program>
</exercise>

    <exercise label="extracting_characters_1">
        <statement>

        <p>Q-3: What would replace the &#8220;?&#8221; in order to access the letter &#8220;b&#8221; in the string below?</p>
        <program language="cpp"><input>
#include &lt;iostream&gt;
using namespace std;

int main () {
  string bake = "bake a cake!";
  char letter = bake[?];
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>1</p>
                </statement>
                <feedback>
                    <p>Don't forget that computer scientists do not start counting at 1!</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>0</p>
                </statement>
                <feedback>
                    <p>Yes, this would access the letter "b".</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>2</p>
                </statement>
                <feedback>
                    <p>This would access the letter "k".</p>
                </feedback>
            </choice>
</choices>

    </exercise>

    <exercise label="extracting_characters_2">
        <statement>

        <p>Q-4: What is printed when the code below is run?</p>
        <program language="cpp"><input>
#include &lt;iostream&gt;
using namespace std;

int main () {
  string lunch = "hello";
  string person = "deejay";
  lunch[0] = lunch[3];
  cout &lt;&lt; lunch;
}
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>lunch</p>
                </statement>
                <feedback>
                    <p>When we <code>cout</code> a <code>string</code> we print its content not its name.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>jello</p>
                </statement>
                <feedback>
                    <p>Carefully check which string(s) we are indexing into.</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>lello</p>
                </statement>
                <feedback>
                    <p>Correct! We copy the 'l' from position 3 of "hello" to position 0.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>heljo</p>
                </statement>
                <feedback>
                    <p>Consider which string(s) we are indexing into.</p>
                </feedback>
            </choice>
</choices>

    </exercise>

<exercise label="extracting_characters_3">
    <statement><p>Click on each spot where a character in a string is accessed.</p></statement>
<feedback><p>Remember, square brackets [] are used to access a character in a string.</p></feedback>
<areas>
<cline><area correct="no">def main() {</area></cline>
<cline>    <area correct="no">string fruit = "apple";</area></cline>
<cline>    char letter = <area correct="yes">fruit[2];</area></cline>
<cline>    <area correct="no">cout &lt;&lt; fruit &lt;&lt; endl;</area></cline>
<cline>    cout &lt;&lt;  <area correct="yes">fruit[4]</area>  &lt;&lt; endl;</cline>
<cline>}</cline>
</areas></exercise><exercise label="extracting_characters_4" numbered="yes" adaptive="yes" indentation="hide" language="python"><statement>
        <p>Construct a block of code that correctly prints the letter &#8220;a&#8221;.</p>
</statement>
<blocks><block order="1" correct="no">
<cline>string x;</cline>
<cline>x = "It is warm outside!";</cline>
<cline>x = "It is warm outside" </cline>
<cline>cout &lt;&lt; x[7] &lt;&lt; endl;</cline>
<cline>cout &lt;&lt; x[8] &lt;&lt; endl; </cline>
</block></blocks></exercise>    </section>

