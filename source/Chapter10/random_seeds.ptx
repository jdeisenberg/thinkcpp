<section xml:id="chapter10_random-seeds">
        <title>Random seeds</title>
        <p>If you have run the code in this chapter a few times, you might have
            noticed that you are getting the same &#8220;random&#8221; values every time. That&#8217;s
            not very random!</p>
        
        
        <p xml:id="chapter10_index-0">One of the properties of pseudorandom number generators is that if they
            start from the same place they will generate the same sequence of
            values. The starting place is called a <term>seed</term>; by default, C++ uses
            the same seed every time you run the program.</p>
        <p>While you are debugging, it is often helpful to see the same sequence
            over and over. That way, when you make a change to the program you can
            compare the output before and after the change.</p>
        <p>If you want to choose a different seed for the random number generator,
            you can use the <c>srand</c> function. It takes a single argument, which is
            an integer between 0 and <c>RAND_MAX</c>.</p>
        <p>For many applications, like games, you want to see a different random
            sequence every time the program runs. A common way to do that is to use
            a library function like <c>gettimeofday</c> to generate something
            reasonably unpredictable and unrepeatable, like the number of
            milliseconds since the last second tick, and use that number as a seed.
            The details of how to do that depend on your development environment.</p>

    <exercise label="random_seeds_1">
        <statement>

        <p>Q-1: If we wanted to generate a random number between 0 and 12, and we have previously declared int <c>int x = random ();</c>, what should be our next line of code?</p>
</statement><choices><choice><statement id="random_seeds_1_opt_a">        <p>Calling the <c>random()</c> function with no arguments.</p>
</statement><feedback id="random_seeds_1_opt_a">
        <p>This always generates the same set of values, using the default seed in C++.</p>
</feedback></choice><choice><statement id="random_seeds_1_opt_b">        <p>Calling <c>srand()</c> on a integer seed.</p>
</statement><feedback id="random_seeds_1_opt_b">
        <p>This always generates the same set of values, using the specified seed.</p>
</feedback></choice><choice correct="yes"><statement id="random_seeds_1_opt_c">        <p>Running the <c>gettimeofday()</c> function, and calling srand() on the result.</p>
</statement><feedback id="random_seeds_1_opt_c">
        <p><c>gettimeofday()</c> will generate something reasonably random, which you can then use as a random seed.</p>
</feedback></choice></choices>
    </exercise>
    </section>

