<section xml:id="chapter5_boolean-values">
        <title>Boolean Values</title>
        
        
        <p>The types we have seen so far are pretty big. There are a lot of
            integers in the world, and even more floating-point numbers. By
            comparison, the set of characters is pretty small. Well, there is
            another type in C++ that is even smaller. It is called <term>boolean</term>, and
            the only values in it are true and false.</p>
        <p>Without thinking about it, we have been using boolean values for the
            last couple of chapters. The condition inside an if statement or a while
            statement is a boolean expression. Also, the result of a comparison
            operator is a boolean value. For example:</p>
        <pre>if (x == 5) {
  // do something
}</pre>
        <p>The operator <c>==</c> compares two integers and produces a boolean value.</p>
        <p>The values true and false are keywords in C++, and can be used anywhere
            a boolean expression is called for. For example,</p>
        <pre>while (true) {
  // loop forever
}</pre>
        <p>is a standard idiom for a loop that should run forever (or until it
            reaches a return or break statement).</p>

        <exercise label="bool_vals_1">
            <statement>
    <p>Q-1: The boolean type has two values <var/> and <var/>.  The <var/>
operator is used to check if two boolean values are equal.</p></statement>

<setup>
    <var>
        <condition string="(true|false)"><feedback><p>Correct!</p></feedback></condition>
        <condition string=".*"><feedback><p>Try again!</p></feedback></condition>
    </var>
    <var>
        <condition string="(true|false)"><feedback><p>Correct!</p></feedback></condition>
        <condition string=".*"><feedback><p>Try again!</p></feedback></condition>
    </var>
    <var>
        <condition string="=="><feedback><p>Correct!</p></feedback></condition>
        <condition string="="><feedback><p>That is the assignment operator.</p></feedback></condition>
        <condition string=".*"><feedback><p>Try again!</p></feedback></condition>
    </var>
</setup>
</exercise>

<exercise label="bool_vals_2" indentation="hide" language="python"><statement>
        <p>Put the following blocks in order of how large the set is.  Put the largest
            set at the top.</p>
</statement>
<blocks><block order="1">
<cline>double</cline>
<cline>int</cline>
<cline>char</cline>
<cline>bool</cline>
</block></blocks></exercise>    </section>

