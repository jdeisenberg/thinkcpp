<section xml:id="chapter3_math-functions">
        <title>Math Functions</title>
        <p>In mathematics, you have probably seen functions like <m>\sin</m> and
            <m>\log</m>, and you have learned to evaluate expressions like
            <m>\sin(\pi/2)</m> and <m>\log(1/x)</m>. First, you evaluate the
            expression in parentheses, which is called the argument of the
            function. For example, <m>\pi/2</m> is approximately 1.571, and
            <m>1/x</m> is 0.1 (if <m>x</m> happens to be 10).</p>
        <p>Then you can evaluate the function itself, either by looking it up in a
            table or by performing various computations. The <m>\sin</m> of 1.571
            is 1, and the <m>\log</m> of 0.1 is -1 (assuming that <m>\log</m>
            indicates the logarithm base 10).</p>
        <p>This process can be applied repeatedly to evaluate more complicated
            expressions like <m>\log(1/\sin(\pi/2))</m>. First we evaluate the
            argument of the innermost function, then evaluate the function, and so
            on.</p>
        <p>C++ provides a set of built-in functions that includes most of the
            mathematical operations you can think of. The math functions are invoked
            using a syntax that is similar to mathematical notation:</p>

<exercise label="math_functions_AC_1">
    <statement>
        <p>This program performs calculations using some of the built-in functions
            from the cmath library.</p>

    </statement>
    <program xml:id="math_functions_AC_1_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;cmath&gt;
using namespace std;

int main () {
    double result = log (17.0);
    double angle = 1.5;
    double height = sin (angle);
    cout &lt;&lt; result &lt;&lt; endl;
    cout &lt;&lt; angle &lt;&lt; endl;
    cout &lt;&lt; height &lt;&lt; endl;
    return 0;
}
        </input>
<tests>


</tests>

    </program>
</exercise>
        <p>The first example sets log to the logarithm of 17, base <m>e</m>. There
            is also a function called <c>log10</c> that takes logarithms base 10.</p>
        <p>The second example finds the sine of the value of the variable angle.
            C++ assumes that the values you use with <c>sin</c> and the other trigonometric
            functions (<c>cos</c>, <c>tan</c>) are in <em>radians</em>.</p>
        <note>
            <p>To convert from degrees to radians, you can divide by 360 and multiply
                by 2<m>\pi</m>.</p>
        </note>
        <p>If you don&#8217;t happen to know <m>\pi</m> to 15 digits, you can calculate
            it using the <c>acos</c> function. The arccosine (or inverse cosine) of -1 is
            <m>\pi</m>, because the cosine of <m>\pi</m> is -1.</p>

<exercise label="math_functions_AC_2">
    <statement>
        <p>This program also uses built-in functions from the cmath library,
            specifically the functions that deal with angles.  As you can see,
            we have a line of code that converts the default radians value to
            degrees.</p>

    </statement>
    <program xml:id="math_functions_AC_2_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
#include &lt;cmath&gt;
using namespace std;

int main () {
    double pi = acos(-1.0);
    double degrees = 90;
    double angle = degrees * 2 * pi / 360.0;
    cout &lt;&lt; pi &lt;&lt; endl;
    cout &lt;&lt; degrees &lt;&lt; endl;
    cout &lt;&lt; angle &lt;&lt; endl;
    return 0;
}
        </input>
<tests>


</tests>

    </program>
</exercise>
        
        
        
        
        <p>Before you can use any of the math functions, you have to include the
            math header file. <term>Header files</term> contain information the compiler
            needs about functions that are defined outside your program. For
            example, in the &#8220;Hello, world!&#8221; program we included a header file named
            iostream using an <term>include</term> statement:</p>
        <pre>#include &lt;iostream&gt;
using namespace std;</pre>
        <p>iostream contains information about input and output (I/O) streams,
            including the object named <c>cout</c>. C++ has a powerful feature called
            namespaces, that allow you to write your own implementation of cout. But
            in most cases, we would need to use the standard implementation. To
            convey this to the compiler, we use the line</p>
        <pre>using namespace std;</pre>
        <note>
            <p>As a rule of the thumb, you should write <c>using namespace std;</c> whenever
                you use iostream.</p>
        </note>
        <p>Similarly, the math header file contains information about the math
            functions. You can include it at the beginning of your program along
            with iostream:</p>
        <pre>#include &lt;cmath&gt;</pre>
        <p>Such header files have an initial &#8216;c&#8217; to signify that these header files
            have been derived from the <term>C</term> language.</p>

<exercise label="dnd1">
    <statement><p>Match the statement to its description.</p></statement>
    <feedback><p>This is feedback.</p></feedback>
<matches><match order="1"><premise>cmath</premise><response>allows the use of functions like log and sin</response></match><match order="2"><premise>iostream</premise><response>contains information about input and output streams</response></match><match order="3"><premise>namespace std</premise><response>the standard implementation of cout</response></match></matches></exercise>
        <exercise label="math_functions_2">
            <statement>
    <p>Q-4: What are the units used by trigonometric functions (<c>sin</c>, <c>asin</c>, etc.) in C++? <var/>  </p></statement>
    <setup>
        <var case="insensitive">
            <condition string="radians">
                <feedback><p>Correct! If you need to convert from degrees to radians, multiply by 2<m>\pi</m> and divide by 360.</p></feedback></condition>
            <condition string="degrees"><feedback><p>This is a unit sometimes used for trigonometric functions, but not the one used by C++.</p></feedback></condition>
            <condition string=".*"><feedback><p>Hint: circles have a <em>rad</em>ius.</p></feedback></condition>
        </var>
    </setup>
</exercise>
    <exercise label="math_functions_3">
        <statement>

        <p>Q-5: <term>Multiple Response</term> Select all correct cmath functions.</p>
</statement><choices><choice correct="yes"><statement id="math_functions_3_opt_a">        <p><c>cos</c></p>
</statement><feedback id="math_functions_3_opt_a">
        <p>This function computes the cosine of an angle.</p>
</feedback></choice><choice><statement id="math_functions_3_opt_b">        <p><c>arctan</c></p>
</statement><feedback id="math_functions_3_opt_b">
        <p>The arc tangent function is actually called <c>atan</c>.</p>
</feedback></choice><choice correct="yes"><statement id="math_functions_3_opt_c">        <p><c>log10</c></p>
</statement><feedback id="math_functions_3_opt_c">
        <p>This function computes the common logarithm.</p>
</feedback></choice><choice correct="yes"><statement id="math_functions_3_opt_d">        <p><c>pow</c></p>
</statement><feedback id="math_functions_3_opt_d">
        <p>This function raises an expression to a power.</p>
</feedback></choice><choice><statement id="math_functions_3_opt_e">        <p><c>ln</c></p>
</statement><feedback id="math_functions_3_opt_e">
        <p>The natural log function is actually called <c>log</c>.</p>
</feedback></choice></choices>
    </exercise>
    </section>

