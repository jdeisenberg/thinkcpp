<section xml:id="chapter3_functions-with-multiple-parameters">
        <title>Functions with Multiple Parameters</title>
        <p>The syntax for declaring and invoking functions with multiple parameters
            is a common source of errors. First, remember that you have to declare
            the type of every parameter. For example</p>
        <pre>void printTime(int hour, int minute) {
  cout &lt;&lt; hour;
  cout &lt;&lt; ":";
  cout &lt;&lt; minute;
}</pre>
        <p>It might be tempting to write <c>(int hour, minute)</c>, but that format is
            only legal for variable declarations, not for parameters.</p>
        <p>Another common source of confusion is that you do not have to declare
            the types of arguments. The following is wrong!</p>
        <pre>int hour = 11;
int minute = 59;
printTime(int hour, int minute);   // WRONG!</pre>
        <p>In this case, the compiler can tell the type of hour and minute by
            looking at their declarations.</p>
        <warning>
            <p>It is unnecessary and illegal to include the type when you pass
                variables as arguments! The type is only needed for declaration.</p>
        </warning>
        <p>The correct syntax is <c>printTime(hour, minute)</c>.</p>

<exercise label="multiple_params_AC_1">
    <statement>
        <p>This program shows how the dollarAmount and centAmount arguments
            are passed into the printPrice function.</p>

    </statement>
    <program xml:id="multiple_params_AC_1_editor" interactive="activecode" language="cpp">

        <input>
#include &lt;iostream&gt;
using namespace std;

void printPrice(int dollars, int cents) {
    cout &lt;&lt; "Price is " &lt;&lt; dollars &lt;&lt; " dollars and " &lt;&lt; cents &lt;&lt; " cents." &lt;&lt; endl;
}

int main() {
    int dollarAmount = 2;
    int centAmount = 92;
    printPrice(dollarAmount, centAmount);
    return 0;
}
        </input>
<tests>


</tests>

    </program>
</exercise>

    <exercise label="multiple_params_1">
        <statement>

        <p>Q-2: Which of the following is a correct function header (first line of
            a function definition)?</p>
</statement><choices><choice><statement id="multiple_params_1_opt_a">        <p><c>totalcost(double cost, tax, discount)</c></p>
</statement><feedback id="multiple_params_1_opt_a">
        <p><c>totalcost</c> needs a return type, and each parameter needs a data type.</p>
</feedback></choice><choice><statement id="multiple_params_1_opt_b">        <p><c>totalCost(double cost, double tax) {</c></p>
</statement><feedback id="multiple_params_1_opt_b">
        <p><c>totalcost</c> needs a return type.</p>
</feedback></choice><choice correct="yes"><statement id="multiple_params_1_opt_c">        <p><c>void totalCost(double cost, double tax, double discount) {</c></p>
</statement><feedback id="multiple_params_1_opt_c">
        <p>Correct!</p>
</feedback></choice></choices>
    </exercise>

    <exercise label="multiple_params_2">
        <statement>

        <p>Q-3: Which of the following is a legal function call of the function below?</p>
        <pre>void multiplyTwo(int num, string name) {
  int total = num * 2;
  cout &lt;&lt; "Hi " &lt;&lt; name &lt;&lt; ", your total is " &lt;&lt; total &lt;&lt; "!" &lt;&lt; endl;
}

int main() {
  int x = 2;
  string philsName = "Phil";
}</pre>
</statement><choices><choice><statement id="multiple_params_2_opt_a">        <p><c>multiplyTwo(int x, string philsName);</c></p>
</statement><feedback id="multiple_params_2_opt_a">
        <p>Data types are not needed when calling a function.</p>
</feedback></choice><choice correct="yes"><statement id="multiple_params_2_opt_b">        <p><c>multiplyTwo(x, philsName);</c></p>
</statement><feedback id="multiple_params_2_opt_b">
        <p>Correct!</p>
</feedback></choice><choice><statement id="multiple_params_2_opt_c">        <p><c>void multiplyTwo(int num, string name) {</c></p>
</statement><feedback id="multiple_params_2_opt_c">
        <p>This is the function definition.</p>
</feedback></choice><choice><statement id="multiple_params_2_opt_d">        <p><c>void multiplyTwo(int x, string philsName);</c></p>
</statement><feedback id="multiple_params_2_opt_d">
        <p>Data types are not needed when calling a function.</p>
</feedback></choice></choices>
    </exercise>
    </section>

